%%[
    SET @lookup = LookUpRows('APIIntegrations','Nombre','CVs')
    SET @rowResult = Row(@lookup,1)
    SET @clientId = Base64Decode(Field(@rowResult,'Client Id'),'UTF-8')
    SET @clientSecret = Base64Decode(Field(@rowResult,'Client Secret'),'UTF-8')
    SET @tenantId = Field(@rowResult,'Tenant Id')
    SET @oldToken = Field(@rowResult,'Token')
    SET @expirationDate = Field(@rowResult,'ExpirationDate')
]%%
<script runat="server">
    Platform.Load("Core","1.1.1");
    try {
        Write('Actualizado 2');
        var tenantId = Variable.GetValue("@tenantId");
        var config = {
            endpoint: "https://"+tenantId+".auth.marketingcloudapis.com/v2/token",
            localDate:  DateTime.SystemDateToLocalDate(Now())
        }
        function retrievetoken(){
            var oldToken = Variable.GetValue("@oldToken");
            var expirationDate = Variable.GetValue("@expirationDate");
            if(oldToken != null && (new Date(config.localDate) < new Date(expirationDate))){
                Write('El token estÃ¡ vigente')
                return {
                    "token":Variable.GetValue("@oldToken"),
                    "url":"https://"+tenantId+".rest.marketingcloudapis.com/",
                    "expires":expirationDate
                }
            }else{
                var result = requestToken();
                var upsert = storeToke(result);
            }
        }
        function requestToken(){
            var payload = {
                "grant_type": "client_credentials",
                "client_id": Variable.GetValue("@clientId"),
                "client_secret": Variable.GetValue("@clientSecret")
            }
            var request = HTTP.Post(config.endpoint,"application/json",Stringify(payload));
            if(request.StatusCode == 200){
                var result = Platform.Function.ParseJSON(request.Response[0]);
                var parsedDate = new Date(config.localDate);
                var expirationDate = new Date(parsedDate.getTime() + (result.expires_in * 1000));
                return {
                    token: result.access_token,
                    url: result.rest_instance_url,
                    expires: expirationDate
                }
            }
        }
        function storeToke(result){
            Write('Ejecutando')
            var rows = Platform.Function.UpsertData(
                'APIIntegrations',
                ["Nombre"],["CVs"],
                ["Token","ExpirationDate"],[result.token,result.expires]
            )
        }
        
        retrievetoken();
    } catch (e) {
        Write(Stringify(e));
    }
</script>